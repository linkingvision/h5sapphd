{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-md.entry.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","Refresher","RefresherContent","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__core_ca0488fc_js__","__WEBPACK_IMPORTED_MODULE_2__config_3c7f3790_js__","__WEBPACK_IMPORTED_MODULE_3__index_3476b023_js__","class_1","hostRef","this","appliedStyles","didStart","progress","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","ionRefresh","ionPull","ionStart","prototype","disabledChanged","gesture","setDisabled","connectedCallback","contentEl","_a","_b","_this","_c","label","el","getAttribute","console","error","closest","getScrollElement","scrollEl","sent","Promise","resolve","then","bind","createGesture","gestureName","gesturePriority","direction","threshold","passive","canStart","onStart","onMove","ev","onEnd","disconnectedCallback","undefined","destroy","complete","close","cancel","getProgress","scrollTop","detail","event","touches","length","Number","isNaN","deltaY","setCss","cancelable","preventDefault","emit","beginRefresh","delay","setTimeout","y","duration","overflowVisible","style","transform","transitionDuration","transitionDelay","overflow","render","mode","slot","class","get","enumerable","configurable","componentWillLoad","pullingIcon","refreshingSpinner","icon","lazy","pullingText","innerHTML","name","refreshingText"],"mappings":"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","file":"static/js/31.7005f7c89a94bf037433.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, c as createEvent, w as writeTask, d as getIonMode, h, e as getElement, H as Host } from './core-ca0488fc.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { s as sanitizeDOMString } from './index-3476b023.js';\nvar Refresher = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.appliedStyles = false;\n        this.didStart = false;\n        this.progress = 0;\n        /**\n         * The current state which the refresher is in. The refresher's states include:\n         *\n         * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n         * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n         * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n         * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n         * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n         * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n         */\n        this.state = 1 /* Inactive */;\n        /**\n         * The minimum distance the user must pull down until the\n         * refresher will go into the `refreshing` state.\n         */\n        this.pullMin = 60;\n        /**\n         * The maximum distance of the pull until the refresher\n         * will automatically go into the `refreshing` state.\n         * Defaults to the result of `pullMin + 60`.\n         */\n        this.pullMax = this.pullMin + 60;\n        /**\n         * Time it takes to close the refresher.\n         */\n        this.closeDuration = '280ms';\n        /**\n         * Time it takes the refresher to to snap back to the `refreshing` state.\n         */\n        this.snapbackDuration = '280ms';\n        /**\n         * How much to multiply the pull speed by. To slow the pull animation down,\n         * pass a number less than `1`. To speed up the pull, pass a number greater\n         * than `1`. The default value is `1` which is equal to the speed of the cursor.\n         * If a negative value is passed in, the factor will be `1` instead.\n         *\n         * For example: If the value passed is `1.2` and the content is dragged by\n         * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n         * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n         * will be `8` pixels, less than the amount the cursor has moved.\n         */\n        this.pullFactor = 1;\n        /**\n         * If `true`, the refresher will be hidden.\n         */\n        this.disabled = false;\n        this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n        this.ionPull = createEvent(this, \"ionPull\", 7);\n        this.ionStart = createEvent(this, \"ionStart\", 7);\n    }\n    class_1.prototype.disabledChanged = function () {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.disabled);\n        }\n    };\n    class_1.prototype.connectedCallback = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var contentEl, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (this.el.getAttribute('slot') !== 'fixed') {\n                            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n                            return [2 /*return*/];\n                        }\n                        contentEl = this.el.closest('ion-content');\n                        if (!contentEl) {\n                            console.error('<ion-refresher> must be used inside an <ion-content>');\n                            return [2 /*return*/];\n                        }\n                        _a = this;\n                        return [4 /*yield*/, contentEl.getScrollElement()];\n                    case 1:\n                        _a.scrollEl = _c.sent();\n                        _b = this;\n                        return [4 /*yield*/, import('./index-624eea58.js')];\n                    case 2:\n                        _b.gesture = (_c.sent()).createGesture({\n                            el: contentEl,\n                            gestureName: 'refresher',\n                            gesturePriority: 10,\n                            direction: 'y',\n                            threshold: 20,\n                            passive: false,\n                            canStart: function () { return _this.canStart(); },\n                            onStart: function () { return _this.onStart(); },\n                            onMove: function (ev) { return _this.onMove(ev); },\n                            onEnd: function () { return _this.onEnd(); },\n                        });\n                        this.disabledChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        this.scrollEl = undefined;\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    };\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n    class_1.prototype.complete = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.close(32 /* Completing */, '120ms');\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n    class_1.prototype.cancel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.close(16 /* Cancelling */, '');\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n    class_1.prototype.getProgress = function () {\n        return Promise.resolve(this.progress);\n    };\n    class_1.prototype.canStart = function () {\n        if (!this.scrollEl) {\n            return false;\n        }\n        if (this.state !== 1 /* Inactive */) {\n            return false;\n        }\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (this.scrollEl.scrollTop > 0) {\n            return false;\n        }\n        return true;\n    };\n    class_1.prototype.onStart = function () {\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    };\n    class_1.prototype.onMove = function (detail) {\n        if (!this.scrollEl) {\n            return;\n        }\n        // this method can get called like a bazillion times per second,\n        // so it's built to be as efficient as possible, and does its\n        // best to do any DOM read/writes only when absolutely necessary\n        // if multi-touch then get out immediately\n        var ev = detail.event;\n        if (ev.touches && ev.touches.length > 1) {\n            return;\n        }\n        // do nothing if it's actively refreshing\n        // or it's in the way of closing\n        // or this was never a startY\n        if ((this.state & 56 /* _BUSY_ */) !== 0) {\n            return;\n        }\n        var pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n        var deltaY = detail.deltaY * pullFactor;\n        // don't bother if they're scrolling up\n        // and have not already started dragging\n        if (deltaY <= 0) {\n            // the current Y is higher than the starting Y\n            // so they scrolled up enough to be ignored\n            this.progress = 0;\n            this.state = 1 /* Inactive */;\n            if (this.appliedStyles) {\n                // reset the styles only if they were applied\n                this.setCss(0, '', false, '');\n                return;\n            }\n            return;\n        }\n        if (this.state === 1 /* Inactive */) {\n            // this refresh is not already actively pulling down\n            // get the content's scrollTop\n            var scrollHostScrollTop = this.scrollEl.scrollTop;\n            // if the scrollTop is greater than zero then it's\n            // not possible to pull the content down yet\n            if (scrollHostScrollTop > 0) {\n                this.progress = 0;\n                return;\n            }\n            // content scrolled all the way to the top, and dragging down\n            this.state = 2 /* Pulling */;\n        }\n        // prevent native scroll events\n        if (ev.cancelable) {\n            ev.preventDefault();\n        }\n        // the refresher is actively pulling at this point\n        // move the scroll element within the content element\n        this.setCss(deltaY, '0ms', true, '');\n        if (deltaY === 0) {\n            // don't continue if there's no delta yet\n            this.progress = 0;\n            return;\n        }\n        var pullMin = this.pullMin;\n        // set pull progress\n        this.progress = deltaY / pullMin;\n        // emit \"start\" if it hasn't started yet\n        if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n        }\n        // emit \"pulling\" on every move\n        this.ionPull.emit();\n        // do nothing if the delta is less than the pull threshold\n        if (deltaY < pullMin) {\n            // ensure it stays in the pulling state, cuz its not ready yet\n            this.state = 2 /* Pulling */;\n            return;\n        }\n        if (deltaY > this.pullMax) {\n            // they pulled farther than the max, so kick off the refresh\n            this.beginRefresh();\n            return;\n        }\n        // pulled farther than the pull min!!\n        // it is now in the `ready` state!!\n        // if they let go then it'll refresh, kerpow!!\n        this.state = 4 /* Ready */;\n        return;\n    };\n    class_1.prototype.onEnd = function () {\n        // only run in a zone when absolutely necessary\n        if (this.state === 4 /* Ready */) {\n            // they pulled down far enough, so it's ready to refresh\n            this.beginRefresh();\n        }\n        else if (this.state === 2 /* Pulling */) {\n            // they were pulling down, but didn't pull down far enough\n            // set the content back to it's original location\n            // and close the refresher\n            // set that the refresh is actively cancelling\n            this.cancel();\n        }\n    };\n    class_1.prototype.beginRefresh = function () {\n        // assumes we're already back in a zone\n        // they pulled down far enough, so it's ready to refresh\n        this.state = 8 /* Refreshing */;\n        // place the content in a hangout position while it thinks\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\n        // emit \"refresh\" because it was pulled down far enough\n        // and they let go to begin refreshing\n        this.ionRefresh.emit({\n            complete: this.complete.bind(this)\n        });\n    };\n    class_1.prototype.close = function (state, delay) {\n        var _this = this;\n        // create fallback timer incase something goes wrong with transitionEnd event\n        setTimeout(function () {\n            _this.state = 1 /* Inactive */;\n            _this.progress = 0;\n            _this.didStart = false;\n            _this.setCss(0, '0ms', false, '');\n        }, 600);\n        // reset set the styles on the scroll element\n        // set that the refresh is actively cancelling/completing\n        this.state = state;\n        this.setCss(0, this.closeDuration, true, delay);\n        // TODO: stop gesture\n    };\n    class_1.prototype.setCss = function (y, duration, overflowVisible, delay) {\n        var _this = this;\n        this.appliedStyles = (y > 0);\n        writeTask(function () {\n            if (_this.scrollEl) {\n                var style = _this.scrollEl.style;\n                style.transform = ((y > 0) ? \"translateY(\" + y + \"px) translateZ(0px)\" : 'translateZ(0px)');\n                style.transitionDuration = duration;\n                style.transitionDelay = delay;\n                style.overflow = (overflowVisible ? 'hidden' : '');\n            }\n        });\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { slot: \"fixed\", class: (_a = {},\n                _a[mode] = true,\n                // Used internally for styling\n                _a[\"refresher-\" + mode] = true,\n                _a['refresher-active'] = this.state !== 1 /* Inactive */,\n                _a['refresher-pulling'] = this.state === 2 /* Pulling */,\n                _a['refresher-ready'] = this.state === 4 /* Ready */,\n                _a['refresher-refreshing'] = this.state === 8 /* Refreshing */,\n                _a['refresher-cancelling'] = this.state === 16 /* Cancelling */,\n                _a['refresher-completing'] = this.state === 32 /* Completing */,\n                _a) }));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;z-index:-1}:host-context([dir=rtl]) ion-refresher,[dir=rtl] ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:.2s;transition:.2s;font-size:30px;text-align:center}:host-context([dir=rtl]) .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-refreshing-icon,[dir=rtl] .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}.refresher-pulling ion-refresher-content .refresher-pulling,.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-cancelling ion-refresher-content .refresher-pulling,.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-icon,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color,#000)}.refresher-md .refresher-refreshing .spinner-crescent circle,.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line{stroke:var(--ion-text-color,#000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color,#000)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar RefresherContent = /** @class */ (function () {\n    function RefresherContent(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    RefresherContent.prototype.componentWillLoad = function () {\n        if (this.pullingIcon === undefined) {\n            this.pullingIcon = config.get('refreshingIcon', 'arrow-down');\n        }\n        if (this.refreshingSpinner === undefined) {\n            var mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n        }\n    };\n    RefresherContent.prototype.render = function () {\n        return (h(Host, { class: getIonMode(this) }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n            h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n            h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n            h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n    };\n    return RefresherContent;\n}());\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-md.entry.js\n// module id = Cz1C\n// module chunks = 31"],"sourceRoot":""}