{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-textarea-ios.entry.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","Textarea","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__core_ca0488fc_js__","__WEBPACK_IMPORTED_MODULE_3__helpers_46f4a262_js__","__WEBPACK_IMPORTED_MODULE_4__theme_18cbe2cc_js__","class_1","hostRef","_this","this","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","getValue","runAutoGrow","connectedCallback","el","dispatchEvent","CustomEvent","detail","disconnectedCallback","document","componentDidLoad","style","height","scrollHeight","setFocus","_a","focus","getInputElement","Promise","resolve","interactive","textarea","input","interactive-disabled","has-placeholder","placeholder","has-value","hasValue","has-focus","render","mode","labelId","label","id","aria-disabled","class","assign","color","ref","autoCapitalize","autoFocus","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap","get","enumerable","configurable"],"mappings":"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","file":"static/js/11.304999d5a6f00297dfc9.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, c as createEvent, f as readTask, d as getIonMode, h, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\nvar Textarea = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-input-\" + textareaIds++;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = function (ev) {\n            if (_this.nativeInput) {\n                _this.value = _this.nativeInput.value;\n            }\n            _this.emitStyle();\n            _this.ionInput.emit(ev);\n        };\n        this.onFocus = function () {\n            _this.hasFocus = true;\n            _this.focusChange();\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.hasFocus = false;\n            _this.focusChange();\n            _this.ionBlur.emit();\n        };\n        this.onKeyDown = function () {\n            _this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    class_1.prototype.debounceChanged = function () {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    /**\n     * Update the native input element when the value changes\n     */\n    class_1.prototype.valueChanged = function () {\n        var nativeInput = this.nativeInput;\n        var value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value: value });\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            this.el.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.componentDidLoad = function () {\n        this.runAutoGrow();\n    };\n    // TODO: performance hit, this cause layout thrashing\n    class_1.prototype.runAutoGrow = function () {\n        var nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(function () {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    };\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    class_1.prototype.setFocus = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.focus();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    class_1.prototype.getInputElement = function () {\n        return Promise.resolve(this.nativeInput);\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    };\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    class_1.prototype.checkClearOnEdit = function () {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    };\n    class_1.prototype.focusChange = function () {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    };\n    class_1.prototype.hasValue = function () {\n        return this.getValue() !== '';\n    };\n    class_1.prototype.getValue = function () {\n        return this.value || '';\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var mode = getIonMode(this);\n        var value = this.getValue();\n        var labelId = this.inputId + '-lbl';\n        var label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a)) }, h(\"textarea\", { class: \"native-textarea\", ref: function (el) { return _this.nativeInput = el; }, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"debounce\": [\"debounceChanged\"],\n                \"disabled\": [\"disabledChanged\"],\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h, ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-textarea-ios-h, .item-label-floating .sc-ion-textarea-ios-h, .item-label-stacked.sc-ion-textarea-ios-h, .item-label-stacked .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar textareaIds = 0;\nexport { Textarea as ion_textarea };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic/core/dist/esm-es5/ion-textarea-ios.entry.js\n// module id = XMQw\n// module chunks = 11"],"sourceRoot":""}