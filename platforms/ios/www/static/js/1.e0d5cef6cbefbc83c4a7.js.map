{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/index-69c37885.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","create","CSS_VALUE_REGEX","TRANSFORM_PROPS","translateX","translateY","translateZ","scale","scaleX","scaleY","scaleZ","rotate","rotateX","rotateY","rotateZ","skewX","skewY","perspective","win","window","raf","requestAnimationFrame","bind","f","Date","now","Animator","this","_hasDur","_hasTweenEffect","_isAsync","_isReverse","_destroyed","hasChildren","isPlaying","hasCompleted","prototype","addElement","el","length","i","_addEl","nodeType","_elements","push","add","childAnimation","parent","_childAnimations","getDuration","opts","undefined","duration","_duration","isRoot","milliseconds","getEasing","_reversedEasingName","_easingName","easing","name","easingReverse","from","prop","val","_addProp","to","clearProperyAfterTransition","fx","afterClearStyles","trans","fromTo","fromVal","toVal","_getProp","_fxProperties","find","effectName","state","fxProp","shouldTrans","wc","fxState","num","effectUnit","indexOf","r","match","parseFloat","isNaN","beforeAddClass","className","_beforeAddClasses","beforeRemoveClass","_beforeRemoveClasses","beforeStyles","styles","_beforeStyles","beforeClearStyles","propertyNames","_i","propertyNames_1","beforeAddRead","domReadFn","_readCallbacks","beforeAddWrite","domWriteFn","_writeCallbacks","afterAddClass","_afterAddClasses","afterRemoveClass","_afterRemoveClasses","afterStyles","_afterStyles","propertyNames_2","play","_this","_hasDuration","_clearAsync","_playInit","_playDomInspect","playAsync","Promise","resolve","onFinish","oneTimeCallback","clearExistingCallbacks","playSync","children","children_1","_progress","_willChange","_beforeAnimation","dur","_asyncEnd","_playProgress","_playToStep","children_2","_setTrans","_setAfterStyles","_didFinish","stepValue","children_3","shouldComplete","self","_unregisterTrnsEnd","callback","unRegTrans","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","transitionEnd","_transEl","_playEnd","_didFinishAll","_timerId","setTimeout","children_4","children_5","_hasDomReads","children_6","stop","clearTimeout","elements","effects","j","finalTransform","fromNum","toNum","tweenEffect","style","setProperty","forcedLinearEasing","durString","elements_1","transitionDuration","transitionTimingFunction","_fireBeforeReadFunc","_fireBeforeWriteFunc","_setBeforeStyles","children_7","addClasses","removeClasses","_a","elements_2","elementClassList","classList","_b","addClasses_1","c","_c","removeClasses_1","remove","_d","_e","entries","_f","key","children_8","readFunctions","readFunctions_1","children_9","writeFunctions","writeFunctions_1","elements_3","beforeAddClasses","beforeAddClasses_1","beforeRemoveClasses","beforeRemoveClasses_1","keys","propName","removeProperty","afterAddClasses","afterAddClasses_1","afterRemoveClasses","afterRemoveClasses_1","_g","_h","_j","addWillChange","willChange","effects_1","propWC","join","elements_4","progressStart","_progressStart","children_10","progressStep","Math","min","max","children_11","progressEnd","currentStepValue","diff","abs","_progressEnd","isAsync","children_12","_onFinishCallbacks","_onFinishOneTimeCallbacks","finishAsyncAnimations","finishNoDurationAnimations","children_13","reverse","shouldReverse","children_14","destroy","children_15","children_16","targetEl","animationBuilder","baseEl"],"mappings":"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","file":"static/js/1.e0d5cef6cbefbc83c4a7.js","sourcesContent":["var transitionEnd = function (el, callback) {\n    var unRegTrans;\n    var opts = { passive: true };\n    var unregister = function () {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    var onTransitionEnd = function (ev) {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = function () {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\nvar CSS_VALUE_REGEX = /(^-?\\d*\\.?\\d*)(.*)/;\nvar DURATION_MIN = 32;\nvar TRANSITION_END_FALLBACK_PADDING_MS = 400;\nvar TRANSFORM_PROPS = {\n    'translateX': 1,\n    'translateY': 1,\n    'translateZ': 1,\n    'scale': 1,\n    'scaleX': 1,\n    'scaleY': 1,\n    'scaleZ': 1,\n    'rotate': 1,\n    'rotateX': 1,\n    'rotateY': 1,\n    'rotateZ': 1,\n    'skewX': 1,\n    'skewY': 1,\n    'perspective': 1\n};\nvar win = typeof window !== 'undefined' ? window : {};\nvar raf = win.requestAnimationFrame\n    ? win.requestAnimationFrame.bind(win)\n    : function (f) { return f(Date.now()); };\nvar Animator = /** @class */ (function () {\n    function Animator() {\n        this._hasDur = false;\n        this._hasTweenEffect = false;\n        this._isAsync = false;\n        this._isReverse = false;\n        this._destroyed = false;\n        this.hasChildren = false;\n        this.isPlaying = false;\n        this.hasCompleted = false;\n    }\n    Animator.prototype.addElement = function (el) {\n        if (el != null) {\n            if (el.length > 0) {\n                for (var i = 0; i < el.length; i++) {\n                    this._addEl(el[i]);\n                }\n            }\n            else {\n                this._addEl(el);\n            }\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._addEl = function (el) {\n        if (el.nodeType === 1) {\n            (this._elements = this._elements || []).push(el);\n        }\n    };\n    /**\n     * Add a child animation to this animation.\n     */\n    Animator.prototype.add = function (childAnimation) {\n        childAnimation.parent = this;\n        this.hasChildren = true;\n        (this._childAnimations = this._childAnimations || []).push(childAnimation);\n        return this;\n    };\n    /**\n     * Get the duration of this animation. If this animation does\n     * not have a duration, then it'll get the duration from its parent.\n     */\n    Animator.prototype.getDuration = function (opts) {\n        if (opts && opts.duration !== undefined) {\n            return opts.duration;\n        }\n        else if (this._duration !== undefined) {\n            return this._duration;\n        }\n        else if (this.parent) {\n            return this.parent.getDuration();\n        }\n        return 0;\n    };\n    /**\n     * Returns if the animation is a root one.\n     */\n    Animator.prototype.isRoot = function () {\n        return !this.parent;\n    };\n    /**\n     * Set the duration for this animation.\n     */\n    Animator.prototype.duration = function (milliseconds) {\n        this._duration = milliseconds;\n        return this;\n    };\n    /**\n     * Get the easing of this animation. If this animation does\n     * not have an easing, then it'll get the easing from its parent.\n     */\n    Animator.prototype.getEasing = function () {\n        if (this._isReverse && this._reversedEasingName !== undefined) {\n            return this._reversedEasingName;\n        }\n        return this._easingName !== undefined ? this._easingName : (this.parent && this.parent.getEasing()) || null;\n    };\n    /**\n     * Set the easing for this animation.\n     */\n    Animator.prototype.easing = function (name) {\n        this._easingName = name;\n        return this;\n    };\n    /**\n     * Set the easing for this reversed animation.\n     */\n    Animator.prototype.easingReverse = function (name) {\n        this._reversedEasingName = name;\n        return this;\n    };\n    /**\n     * Add the \"from\" value for a specific property.\n     */\n    Animator.prototype.from = function (prop, val) {\n        this._addProp('from', prop, val);\n        return this;\n    };\n    /**\n     * Add the \"to\" value for a specific property.\n     */\n    Animator.prototype.to = function (prop, val, clearProperyAfterTransition) {\n        if (clearProperyAfterTransition === void 0) { clearProperyAfterTransition = false; }\n        var fx = this._addProp('to', prop, val);\n        if (clearProperyAfterTransition) {\n            // if this effect is a transform then clear the transform effect\n            // otherwise just clear the actual property\n            this.afterClearStyles(fx.trans ? ['transform', '-webkit-transform'] : [prop]);\n        }\n        return this;\n    };\n    /**\n     * Shortcut to add both the \"from\" and \"to\" for the same property.\n     */\n    Animator.prototype.fromTo = function (prop, fromVal, toVal, clearProperyAfterTransition) {\n        return this.from(prop, fromVal).to(prop, toVal, clearProperyAfterTransition);\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._getProp = function (name) {\n        if (this._fxProperties) {\n            return this._fxProperties.find(function (prop) { return prop.effectName === name; });\n        }\n        return undefined;\n    };\n    Animator.prototype._addProp = function (state, prop, val) {\n        var fxProp = this._getProp(prop);\n        if (!fxProp) {\n            // first time we've see this EffectProperty\n            var shouldTrans = (TRANSFORM_PROPS[prop] === 1);\n            fxProp = {\n                effectName: prop,\n                trans: shouldTrans,\n                // add the will-change property for transforms or opacity\n                wc: (shouldTrans ? 'transform' : prop)\n            };\n            (this._fxProperties = this._fxProperties || []).push(fxProp);\n        }\n        // add from/to EffectState to the EffectProperty\n        var fxState = {\n            val: val,\n            num: 0,\n            effectUnit: '',\n        };\n        fxProp[state] = fxState;\n        if (typeof val === 'string' && val.indexOf(' ') < 0) {\n            var r = val.match(CSS_VALUE_REGEX);\n            if (r) {\n                var num = parseFloat(r[1]);\n                if (!isNaN(num)) {\n                    fxState.num = num;\n                }\n                fxState.effectUnit = (r[0] !== r[2] ? r[2] : '');\n            }\n        }\n        else if (typeof val === 'number') {\n            fxState.num = val;\n        }\n        return fxProp;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddClass = function (className) {\n        (this._beforeAddClasses = this._beforeAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeRemoveClass = function (className) {\n        (this._beforeRemoveClasses = this._beforeRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeStyles = function (styles) {\n        this._beforeStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * before the animation begins.\n     */\n    Animator.prototype.beforeClearStyles = function (propertyNames) {\n        this._beforeStyles = this._beforeStyles || {};\n        for (var _i = 0, propertyNames_1 = propertyNames; _i < propertyNames_1.length; _i++) {\n            var prop = propertyNames_1[_i];\n            this._beforeStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Add a function which contains DOM reads, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddRead = function (domReadFn) {\n        (this._readCallbacks = this._readCallbacks || []).push(domReadFn);\n        return this;\n    };\n    /**\n     * Add a function which contains DOM writes, which will run\n     * before the animation begins.\n     */\n    Animator.prototype.beforeAddWrite = function (domWriteFn) {\n        (this._writeCallbacks = this._writeCallbacks || []).push(domWriteFn);\n        return this;\n    };\n    /**\n     * Add CSS class to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterAddClass = function (className) {\n        (this._afterAddClasses = this._afterAddClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Remove CSS class from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterRemoveClass = function (className) {\n        (this._afterRemoveClasses = this._afterRemoveClasses || []).push(className);\n        return this;\n    };\n    /**\n     * Set CSS inline styles to this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterStyles = function (styles) {\n        this._afterStyles = styles;\n        return this;\n    };\n    /**\n     * Clear CSS inline styles from this animation's elements\n     * after the animation finishes.\n     */\n    Animator.prototype.afterClearStyles = function (propertyNames) {\n        this._afterStyles = this._afterStyles || {};\n        for (var _i = 0, propertyNames_2 = propertyNames; _i < propertyNames_2.length; _i++) {\n            var prop = propertyNames_2[_i];\n            this._afterStyles[prop] = '';\n        }\n        return this;\n    };\n    /**\n     * Play the animation.\n     */\n    Animator.prototype.play = function (opts) {\n        var _this = this;\n        // If the animation was already invalidated (it did finish), do nothing\n        if (this._destroyed) {\n            return;\n        }\n        // this is the top level animation and is in full control\n        // of when the async play() should actually kick off\n        // if there is no duration then it'll set the TO property immediately\n        // if there is a duration, then it'll stage all animations at the\n        // FROM property and transition duration, wait a few frames, then\n        // kick off the animation by setting the TO property for each animation\n        this._isAsync = this._hasDuration(opts);\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // recursively kicks off the correct progress step for each child animation\n        // ******** DOM WRITE ****************\n        this._playInit(opts);\n        // doubling up RAFs since this animation was probably triggered\n        // from an input event, and just having one RAF would have this code\n        // run within the same frame as the triggering input event, and the\n        // input event probably already did way too much work for one frame\n        raf(function () {\n            raf(function () {\n                _this._playDomInspect(opts);\n            });\n        });\n    };\n    Animator.prototype.playAsync = function (opts) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.onFinish(resolve, { oneTimeCallback: true, clearExistingCallbacks: true });\n            _this.play(opts);\n            return _this;\n        });\n    };\n    Animator.prototype.playSync = function () {\n        // If the animation was already invalidated (it did finish), do nothing\n        if (!this._destroyed) {\n            var opts = { duration: 0 };\n            this._isAsync = false;\n            this._clearAsync();\n            this._playInit(opts);\n            this._playDomInspect(opts);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playInit = function (opts) {\n        // always default that an animation does not tween\n        // a tween requires that an Animation class has an element\n        // and that it has at least one FROM/TO effect\n        // and that the FROM/TO effect can tween numeric values\n        this._hasTweenEffect = false;\n        this.isPlaying = true;\n        this.hasCompleted = false;\n        this._hasDur = (this.getDuration(opts) > DURATION_MIN);\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                var child = children_1[_i];\n                // ******** DOM WRITE ****************\n                child._playInit(opts);\n            }\n        }\n        if (this._hasDur) {\n            // if there is a duration then we want to start at step 0\n            // ******** DOM WRITE ****************\n            this._progress(0);\n            // add the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._playDomInspect = function (opts) {\n        var _this = this;\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        // ******** DOM WRITE ****************\n        this._beforeAnimation();\n        // for the root animation only\n        // set the async TRANSITION END event\n        // and run onFinishes when the transition ends\n        var dur = this.getDuration(opts);\n        if (this._isAsync) {\n            this._asyncEnd(dur, true);\n        }\n        // ******** DOM WRITE ****************\n        this._playProgress(opts);\n        if (this._isAsync && !this._destroyed) {\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            raf(function () {\n                _this._playToStep(1);\n            });\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playProgress = function (opts) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {\n                var child = children_2[_i];\n                // ******** DOM WRITE ****************\n                child._playProgress(opts);\n            }\n        }\n        if (this._hasDur) {\n            // set the CSS TRANSITION duration/easing\n            // ******** DOM WRITE ****************\n            this._setTrans(this.getDuration(opts), false);\n        }\n        else {\n            // this animation does not have a duration, so it should not animate\n            // just go straight to the TO properties and call it done\n            // ******** DOM WRITE ****************\n            this._progress(1);\n            // since there was no animation, immediately run the after\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // this animation has no duration, so it has finished\n            // other animations could still be running\n            this._didFinish(true);\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playToStep = function (stepValue) {\n        if (!this._destroyed) {\n            var children = this._childAnimations;\n            if (children) {\n                for (var _i = 0, children_3 = children; _i < children_3.length; _i++) {\n                    var child = children_3[_i];\n                    // ******** DOM WRITE ****************\n                    child._playToStep(stepValue);\n                }\n            }\n            if (this._hasDur) {\n                // browser had some time to render everything in place\n                // and the transition duration/easing is set\n                // now set the TO properties which will trigger the transition to begin\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     * ROOT ANIMATION\n     */\n    Animator.prototype._asyncEnd = function (dur, shouldComplete) {\n        var self = this;\n        var onTransitionEnd = function () {\n            // congrats! a successful transition completed!\n            // ensure transition end events and timeouts have been cleared\n            self._clearAsync();\n            // ******** DOM WRITE ****************\n            self._playEnd();\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        var onTransitionFallback = function () {\n            // oh noz! the transition end event didn't fire in time!\n            // instead the fallback timer when first\n            // if all goes well this fallback should never fire\n            // clear the other async end events from firing\n            self._timerId = undefined;\n            self._clearAsync();\n            // set the after styles\n            // ******** DOM WRITE ****************\n            self._playEnd(shouldComplete ? 1 : 0);\n            // transition finished\n            self._didFinishAll(shouldComplete, true, false);\n        };\n        // set the TRANSITION END event on one of the transition elements\n        self._unregisterTrnsEnd = transitionEnd(self._transEl(), onTransitionEnd);\n        // set a fallback timeout if the transition end event never fires, or is too slow\n        // transition end fallback: (animation duration + XXms)\n        self._timerId = setTimeout(onTransitionFallback, (dur + TRANSITION_END_FALLBACK_PADDING_MS));\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._playEnd = function (stepValue) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_4 = children; _i < children_4.length; _i++) {\n                var child = children_4[_i];\n                // ******** DOM WRITE ****************\n                child._playEnd(stepValue);\n            }\n        }\n        if (this._hasDur) {\n            if (stepValue !== undefined) {\n                // too late to have a smooth animation, just finish it\n                // ******** DOM WRITE ****************\n                this._setTrans(0, true);\n                // ensure the ending progress step gets rendered\n                // ******** DOM WRITE ****************\n                this._progress(stepValue);\n            }\n            // set the after styles\n            // ******** DOM WRITE ****************\n            this._setAfterStyles();\n            // remove the will-change properties\n            // ******** DOM WRITE ****************\n            this._willChange(false);\n        }\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDuration = function (opts) {\n        if (this.getDuration(opts) > DURATION_MIN) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_5 = children; _i < children_5.length; _i++) {\n                var child = children_5[_i];\n                if (child._hasDuration(opts)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._hasDomReads = function () {\n        if (this._readCallbacks && this._readCallbacks.length > 0) {\n            return true;\n        }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_6 = children; _i < children_6.length; _i++) {\n                var child = children_6[_i];\n                if (child._hasDomReads()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Immediately stop at the end of the animation.\n     */\n    Animator.prototype.stop = function (stepValue) {\n        if (stepValue === void 0) { stepValue = 1; }\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        this._hasDur = true;\n        this._playEnd(stepValue);\n    };\n    /**\n     * NO DOM\n     * NO RECURSION\n     */\n    Animator.prototype._clearAsync = function () {\n        if (this._unregisterTrnsEnd) {\n            this._unregisterTrnsEnd();\n        }\n        if (this._timerId) {\n            clearTimeout(this._timerId);\n        }\n        this._timerId = this._unregisterTrnsEnd = undefined;\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._progress = function (stepValue) {\n        // bread 'n butter\n        var val;\n        var elements = this._elements;\n        var effects = this._fxProperties;\n        if (!elements || elements.length === 0 || !effects || this._destroyed) {\n            return;\n        }\n        // flip the number if we're going in reverse\n        if (this._isReverse) {\n            stepValue = 1 - stepValue;\n        }\n        var i = 0;\n        var j = 0;\n        var finalTransform = '';\n        var fx;\n        for (i = 0; i < effects.length; i++) {\n            fx = effects[i];\n            if (fx.from && fx.to) {\n                var fromNum = fx.from.num;\n                var toNum = fx.to.num;\n                var tweenEffect = (fromNum !== toNum);\n                if (tweenEffect) {\n                    this._hasTweenEffect = true;\n                }\n                if (stepValue === 0) {\n                    // FROM\n                    val = fx.from.val;\n                }\n                else if (stepValue === 1) {\n                    // TO\n                    val = fx.to.val;\n                }\n                else if (tweenEffect) {\n                    // EVERYTHING IN BETWEEN\n                    var valNum = (((toNum - fromNum) * stepValue) + fromNum);\n                    var unit = fx.to.effectUnit;\n                    val = valNum + unit;\n                }\n                if (val !== null) {\n                    var prop = fx.effectName;\n                    if (fx.trans) {\n                        finalTransform += prop + '(' + val + ') ';\n                    }\n                    else {\n                        for (j = 0; j < elements.length; j++) {\n                            // ******** DOM WRITE ****************\n                            elements[j].style.setProperty(prop, val);\n                        }\n                    }\n                }\n            }\n        }\n        // place all transforms on the same property\n        if (finalTransform.length > 0) {\n            if (!this._isReverse && stepValue !== 1 || this._isReverse && stepValue !== 0) {\n                finalTransform += 'translateZ(0px)';\n            }\n            for (i = 0; i < elements.length; i++) {\n                // ******** DOM WRITE ****************\n                elements[i].style.setProperty('transform', finalTransform);\n                elements[i].style.setProperty('-webkit-transform', finalTransform);\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._setTrans = function (dur, forcedLinearEasing) {\n        // Transition is not enabled if there are not effects\n        var elements = this._elements;\n        if (!elements || elements.length === 0 || !this._fxProperties) {\n            return;\n        }\n        // set the TRANSITION properties inline on the element\n        var easing = (forcedLinearEasing ? 'linear' : this.getEasing());\n        var durString = dur + 'ms';\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var style = elements_1[_i].style;\n            if (dur > 0) {\n                // ******** DOM WRITE ****************\n                style.transitionDuration = durString;\n                // each animation can have a different easing\n                if (easing !== null) {\n                    // ******** DOM WRITE ****************\n                    style.transitionTimingFunction = easing;\n                }\n            }\n            else {\n                style.transitionDuration = '0';\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._beforeAnimation = function () {\n        // fire off all the \"before\" function that have DOM READS in them\n        // elements will be in the DOM, however visibily hidden\n        // so we can read their dimensions if need be\n        // ******** DOM READ ****************\n        this._fireBeforeReadFunc();\n        // ******** DOM READS ABOVE / DOM WRITES BELOW ****************\n        // fire off all the \"before\" function that have DOM WRITES in them\n        // ******** DOM WRITE ****************\n        this._fireBeforeWriteFunc();\n        // stage all of the before css classes and inline styles\n        // ******** DOM WRITE ****************\n        this._setBeforeStyles();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._setBeforeStyles = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_7 = children; _i < children_7.length; _i++) {\n                var child = children_7[_i];\n                child._setBeforeStyles();\n            }\n        }\n        var elements = this._elements;\n        // before the animations have started\n        // only set before styles if animation is not reversed\n        if (!elements || elements.length === 0 || this._isReverse) {\n            return;\n        }\n        var addClasses = this._beforeAddClasses;\n        var removeClasses = this._beforeRemoveClasses;\n        for (var _a = 0, elements_2 = elements; _a < elements_2.length; _a++) {\n            var el = elements_2[_a];\n            var elementClassList = el.classList;\n            // css classes to add before the animation\n            if (addClasses) {\n                for (var _b = 0, addClasses_1 = addClasses; _b < addClasses_1.length; _b++) {\n                    var c = addClasses_1[_b];\n                    // ******** DOM WRITE ****************\n                    elementClassList.add(c);\n                }\n            }\n            // css classes to remove before the animation\n            if (removeClasses) {\n                for (var _c = 0, removeClasses_1 = removeClasses; _c < removeClasses_1.length; _c++) {\n                    var c = removeClasses_1[_c];\n                    // ******** DOM WRITE ****************\n                    elementClassList.remove(c);\n                }\n            }\n            // inline styles to add before the animation\n            if (this._beforeStyles) {\n                for (var _d = 0, _e = Object.entries(this._beforeStyles); _d < _e.length; _d++) {\n                    var _f = _e[_d], key = _f[0], value = _f[1];\n                    // ******** DOM WRITE ****************\n                    el.style.setProperty(key, value);\n                }\n            }\n        }\n    };\n    /**\n     * DOM READ\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeReadFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_8 = children; _i < children_8.length; _i++) {\n                var child = children_8[_i];\n                // ******** DOM READ ****************\n                child._fireBeforeReadFunc();\n            }\n        }\n        var readFunctions = this._readCallbacks;\n        if (readFunctions) {\n            for (var _a = 0, readFunctions_1 = readFunctions; _a < readFunctions_1.length; _a++) {\n                var callback = readFunctions_1[_a];\n                // ******** DOM READ ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._fireBeforeWriteFunc = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_9 = children; _i < children_9.length; _i++) {\n                var child = children_9[_i];\n                // ******** DOM WRITE ****************\n                child._fireBeforeWriteFunc();\n            }\n        }\n        var writeFunctions = this._writeCallbacks;\n        if (writeFunctions) {\n            for (var _a = 0, writeFunctions_1 = writeFunctions; _a < writeFunctions_1.length; _a++) {\n                var callback = writeFunctions_1[_a];\n                // ******** DOM WRITE ****************\n                callback();\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     */\n    Animator.prototype._setAfterStyles = function () {\n        var elements = this._elements;\n        if (!elements) {\n            return;\n        }\n        for (var _i = 0, elements_3 = elements; _i < elements_3.length; _i++) {\n            var el = elements_3[_i];\n            var elementClassList = el.classList;\n            // remove the transition duration/easing\n            // ******** DOM WRITE ****************\n            el.style.transitionDuration = el.style.transitionTimingFunction = '';\n            if (this._isReverse) {\n                // finished in reverse direction\n                // css classes that were added before the animation should be removed\n                var beforeAddClasses = this._beforeAddClasses;\n                if (beforeAddClasses) {\n                    for (var _a = 0, beforeAddClasses_1 = beforeAddClasses; _a < beforeAddClasses_1.length; _a++) {\n                        var c = beforeAddClasses_1[_a];\n                        elementClassList.remove(c);\n                    }\n                }\n                // css classes that were removed before the animation should be added\n                var beforeRemoveClasses = this._beforeRemoveClasses;\n                if (beforeRemoveClasses) {\n                    for (var _b = 0, beforeRemoveClasses_1 = beforeRemoveClasses; _b < beforeRemoveClasses_1.length; _b++) {\n                        var c = beforeRemoveClasses_1[_b];\n                        elementClassList.add(c);\n                    }\n                }\n                // inline styles that were added before the animation should be removed\n                var beforeStyles = this._beforeStyles;\n                if (beforeStyles) {\n                    for (var _c = 0, _d = Object.keys(beforeStyles); _c < _d.length; _c++) {\n                        var propName = _d[_c];\n                        // ******** DOM WRITE ****************\n                        el.style.removeProperty(propName);\n                    }\n                }\n            }\n            else {\n                // finished in forward direction\n                // css classes to add after the animation\n                var afterAddClasses = this._afterAddClasses;\n                if (afterAddClasses) {\n                    for (var _e = 0, afterAddClasses_1 = afterAddClasses; _e < afterAddClasses_1.length; _e++) {\n                        var c = afterAddClasses_1[_e];\n                        // ******** DOM WRITE ****************\n                        elementClassList.add(c);\n                    }\n                }\n                // css classes to remove after the animation\n                var afterRemoveClasses = this._afterRemoveClasses;\n                if (afterRemoveClasses) {\n                    for (var _f = 0, afterRemoveClasses_1 = afterRemoveClasses; _f < afterRemoveClasses_1.length; _f++) {\n                        var c = afterRemoveClasses_1[_f];\n                        // ******** DOM WRITE ****************\n                        elementClassList.remove(c);\n                    }\n                }\n                // inline styles to add after the animation\n                var afterStyles = this._afterStyles;\n                if (afterStyles) {\n                    for (var _g = 0, _h = Object.entries(afterStyles); _g < _h.length; _g++) {\n                        var _j = _h[_g], key = _j[0], value = _j[1];\n                        el.style.setProperty(key, value);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * NO RECURSION\n     */\n    Animator.prototype._willChange = function (addWillChange) {\n        var wc;\n        var effects = this._fxProperties;\n        var willChange;\n        if (addWillChange && effects) {\n            wc = [];\n            for (var _i = 0, effects_1 = effects; _i < effects_1.length; _i++) {\n                var effect = effects_1[_i];\n                var propWC = effect.wc;\n                if (propWC === 'webkitTransform') {\n                    wc.push('transform', '-webkit-transform');\n                }\n                else if (propWC !== undefined) {\n                    wc.push(propWC);\n                }\n            }\n            willChange = wc.join(',');\n        }\n        else {\n            willChange = '';\n        }\n        var elements = this._elements;\n        if (elements) {\n            for (var _a = 0, elements_4 = elements; _a < elements_4.length; _a++) {\n                var el = elements_4[_a];\n                // ******** DOM WRITE ****************\n                el.style.setProperty('will-change', willChange);\n            }\n        }\n    };\n    /**\n     * Start the animation with a user controlled progress.\n     */\n    Animator.prototype.progressStart = function () {\n        // ensure all past transition end events have been cleared\n        this._clearAsync();\n        // ******** DOM READ/WRITE ****************\n        this._beforeAnimation();\n        // ******** DOM WRITE ****************\n        this._progressStart();\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressStart = function () {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_10 = children; _i < children_10.length; _i++) {\n                var child = children_10[_i];\n                // ******** DOM WRITE ****************\n                child._progressStart();\n            }\n        }\n        // force no duration, linear easing\n        // ******** DOM WRITE ****************\n        this._setTrans(0, true);\n        // ******** DOM WRITE ****************\n        this._willChange(true);\n    };\n    /**\n     * Set the progress step for this animation.\n     * progressStep() is not debounced, so it should not be called faster than 60FPS.\n     */\n    Animator.prototype.progressStep = function (stepValue) {\n        // only update if the last update was more than 16ms ago\n        stepValue = Math.min(1, Math.max(0, stepValue));\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_11 = children; _i < children_11.length; _i++) {\n                var child = children_11[_i];\n                // ******** DOM WRITE ****************\n                child.progressStep(stepValue);\n            }\n        }\n        // ******** DOM WRITE ****************\n        this._progress(stepValue);\n    };\n    /**\n     * End the progress animation.\n     */\n    Animator.prototype.progressEnd = function (shouldComplete, currentStepValue, dur) {\n        var _this = this;\n        if (dur === void 0) { dur = -1; }\n        if (this._isReverse) {\n            // if the animation is going in reverse then\n            // flip the step value: 0 becomes 1, 1 becomes 0\n            currentStepValue = 1 - currentStepValue;\n        }\n        var stepValue = shouldComplete ? 1 : 0;\n        var diff = Math.abs(currentStepValue - stepValue);\n        if (dur < 0) {\n            dur = this._duration || 0;\n        }\n        else if (diff < 0.05) {\n            dur = 0;\n        }\n        this._isAsync = (dur > 30);\n        this._progressEnd(shouldComplete, stepValue, dur, this._isAsync);\n        if (this._isAsync) {\n            // for the root animation only\n            // set the async TRANSITION END event\n            // and run onFinishes when the transition ends\n            // ******** DOM WRITE ****************\n            this._asyncEnd(dur, shouldComplete);\n            // this animation has a duration so we need another RAF\n            // for the CSS TRANSITION properties to kick in\n            if (!this._destroyed) {\n                raf(function () {\n                    _this._playToStep(stepValue);\n                });\n            }\n        }\n    };\n    /**\n     * DOM WRITE\n     * RECURSION\n     */\n    Animator.prototype._progressEnd = function (shouldComplete, stepValue, dur, isAsync) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_12 = children; _i < children_12.length; _i++) {\n                var child = children_12[_i];\n                // ******** DOM WRITE ****************\n                child._progressEnd(shouldComplete, stepValue, dur, isAsync);\n            }\n        }\n        if (!isAsync) {\n            // stop immediately\n            // set all the animations to their final position\n            // ******** DOM WRITE ****************\n            this._progress(stepValue);\n            this._willChange(false);\n            this._setAfterStyles();\n            this._didFinish(shouldComplete);\n        }\n        else {\n            // animate it back to it's ending position\n            this.isPlaying = true;\n            this.hasCompleted = false;\n            this._hasDur = true;\n            // ******** DOM WRITE ****************\n            this._willChange(true);\n            this._setTrans(dur, false);\n        }\n    };\n    /**\n     * Add a callback to fire when the animation has finished.\n     */\n    Animator.prototype.onFinish = function (callback, opts) {\n        if (opts && opts.clearExistingCallbacks) {\n            this._onFinishCallbacks = this._onFinishOneTimeCallbacks = undefined;\n        }\n        if (opts && opts.oneTimeCallback) {\n            this._onFinishOneTimeCallbacks = this._onFinishOneTimeCallbacks || [];\n            this._onFinishOneTimeCallbacks.push(callback);\n        }\n        else {\n            this._onFinishCallbacks = this._onFinishCallbacks || [];\n            this._onFinishCallbacks.push(callback);\n        }\n        return this;\n    };\n    /**\n     * NO DOM\n     * RECURSION\n     */\n    Animator.prototype._didFinishAll = function (hasCompleted, finishAsyncAnimations, finishNoDurationAnimations) {\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_13 = children; _i < children_13.length; _i++) {\n                var child = children_13[_i];\n                child._didFinishAll(hasCompleted, finishAsyncAnimations, finishNoDurationAnimations);\n            }\n        }\n        if (finishAsyncAnimations && this._isAsync || finishNoDurationAnimations && !this._isAsync) {\n            this._didFinish(hasCompleted);\n        }\n    };\n    /**\n     * NO RECURSION\n     */\n    Animator.prototype._didFinish = function (hasCompleted) {\n        this.isPlaying = false;\n        this.hasCompleted = hasCompleted;\n        if (this._onFinishCallbacks) {\n            // run all finish callbacks\n            for (var _i = 0, _a = this._onFinishCallbacks; _i < _a.length; _i++) {\n                var callback = _a[_i];\n                callback(this);\n            }\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            // run all \"onetime\" finish callbacks\n            for (var _b = 0, _c = this._onFinishOneTimeCallbacks; _b < _c.length; _b++) {\n                var callback = _c[_b];\n                callback(this);\n            }\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * Reverse the animation.\n     */\n    Animator.prototype.reverse = function (shouldReverse) {\n        if (shouldReverse === void 0) { shouldReverse = true; }\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_14 = children; _i < children_14.length; _i++) {\n                var child = children_14[_i];\n                child.reverse(shouldReverse);\n            }\n        }\n        this._isReverse = !!shouldReverse;\n        return this;\n    };\n    /**\n     * Recursively destroy this animation and all child animations.\n     */\n    Animator.prototype.destroy = function () {\n        this._didFinish(false);\n        this._destroyed = true;\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_15 = children; _i < children_15.length; _i++) {\n                var child = children_15[_i];\n                child.destroy();\n            }\n        }\n        this._clearAsync();\n        if (this._elements) {\n            this._elements.length = 0;\n        }\n        if (this._readCallbacks) {\n            this._readCallbacks.length = 0;\n        }\n        if (this._writeCallbacks) {\n            this._writeCallbacks.length = 0;\n        }\n        this.parent = undefined;\n        if (this._childAnimations) {\n            this._childAnimations.length = 0;\n        }\n        if (this._onFinishCallbacks) {\n            this._onFinishCallbacks.length = 0;\n        }\n        if (this._onFinishOneTimeCallbacks) {\n            this._onFinishOneTimeCallbacks.length = 0;\n        }\n    };\n    /**\n     * NO DOM\n     */\n    Animator.prototype._transEl = function () {\n        // get the lowest level element that has an Animator\n        var children = this._childAnimations;\n        if (children) {\n            for (var _i = 0, children_16 = children; _i < children_16.length; _i++) {\n                var child = children_16[_i];\n                var targetEl = child._transEl();\n                if (targetEl) {\n                    return targetEl;\n                }\n            }\n        }\n        return (this._hasTweenEffect &&\n            this._hasDur &&\n            this._elements !== undefined &&\n            this._elements.length > 0 ?\n            this._elements[0] : null);\n    };\n    return Animator;\n}());\nvar create = function (animationBuilder, baseEl, opts) {\n    if (animationBuilder) {\n        return animationBuilder(Animator, baseEl, opts);\n    }\n    return Promise.resolve(new Animator());\n};\nexport { create };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic/core/dist/esm-es5/index-69c37885.js\n// module id = Aj3G\n// module chunks = 1"],"sourceRoot":""}