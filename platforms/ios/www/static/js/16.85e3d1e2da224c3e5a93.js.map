{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-split-pane-md.entry.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","SplitPane","__WEBPACK_IMPORTED_MODULE_0__core_ca0488fc_js__","QUERY","xs","sm","md","lg","xl","never","hostRef","this","visible","disabled","when","ionSplitPaneVisible","prototype","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","componentWillLoad","contentId","console","warn","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","setPaneClass","render","_a","mode","class","get","enumerable","configurable","toAdd","toRemove","add","remove"],"mappings":"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","file":"static/js/16.85e3d1e2da224c3e5a93.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nvar SplitPane = /** @class */ (function () {\n    function SplitPane(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    SplitPane.prototype.visibleChanged = function (visible) {\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    };\n    SplitPane.prototype.connectedCallback = function () {\n        this.styleChildren();\n        this.updateState();\n    };\n    SplitPane.prototype.disconnectedCallback = function () {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    };\n    SplitPane.prototype.componentWillLoad = function () {\n        if (this.contentId === undefined) {\n            console.warn(\"[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \\\"contentId\\\" property instead:\\nBEFORE:\\n  <ion-split-pane>\\n    ...\\n    <div main>...</div>\\n  </ion-split-pane>\\n\\nAFTER:\\n  <ion-split-pane contentId=\\\"main-content\\\">\\n    ...\\n    <div id=\\\"main-content\\\">...</div>\\n  </ion-split-pane>\\n\");\n        }\n    };\n    SplitPane.prototype.updateState = function () {\n        var _this = this;\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        var query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        var mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            var callback_1 = function (q) {\n                _this.visible = q.matches;\n            };\n            var mediaList_1 = window.matchMedia(mediaQuery);\n            mediaList_1.addListener(callback_1);\n            this.rmL = function () { return mediaList_1.removeListener(callback_1); };\n            this.visible = mediaList_1.matches;\n        }\n    };\n    SplitPane.prototype.isPane = function (element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    };\n    SplitPane.prototype.styleChildren = function () {\n        var contentId = this.contentId;\n        var children = this.el.children;\n        var nu = this.el.childElementCount;\n        var foundMain = false;\n        for (var i = 0; i < nu; i++) {\n            var child = children[i];\n            var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    };\n    SplitPane.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { class: (_a = {},\n                _a[mode] = true,\n                // Used internally for styling\n                _a[\"split-pane-\" + mode] = true,\n                _a['split-pane-visible'] = this.visible,\n                _a) }));\n    };\n    Object.defineProperty(SplitPane.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"watchers\", {\n        get: function () {\n            return {\n                \"visible\": [\"visibleChanged\"],\n                \"disabled\": [\"updateState\"],\n                \"when\": [\"updateState\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"style\", {\n        get: function () { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return SplitPane;\n}());\nvar setPaneClass = function (el, isMain) {\n    var toAdd;\n    var toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    var classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\nexport { SplitPane as ion_split_pane };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic/core/dist/esm-es5/ion-split-pane-md.entry.js\n// module id = pzAc\n// module chunks = 16"],"sourceRoot":""}