{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-checkbox-ios.entry.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","Checkbox","__WEBPACK_IMPORTED_MODULE_0__core_ca0488fc_js__","__WEBPACK_IMPORTED_MODULE_2__helpers_46f4a262_js__","__WEBPACK_IMPORTED_MODULE_3__theme_18cbe2cc_js__","hostRef","_this","this","inputId","checkboxIds","name","checked","indeterminate","disabled","onClick","setFocus","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","ionStyle","prototype","componentWillLoad","emitStyle","checkedChanged","isChecked","disabledChanged","checkbox-checked","interactive-disabled","buttonEl","focus","render","_a","_b","color","el","labelId","mode","label","id","path","role","aria-disabled","aria-checked","aria-labelledby","class","assign","viewBox","type","ref","btnEl","get","enumerable","configurable"],"mappings":"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","file":"static/js/65.c296b349bd94d8f7417a.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nvar Checkbox = /** @class */ (function () {\n    function Checkbox(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-cb-\" + checkboxIds++;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = function () {\n            _this.setFocus();\n            _this.checked = !_this.checked;\n            _this.indeterminate = false;\n        };\n        this.onFocus = function () {\n            _this.ionFocus.emit();\n        };\n        this.onBlur = function () {\n            _this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    Checkbox.prototype.componentWillLoad = function () {\n        this.emitStyle();\n    };\n    Checkbox.prototype.checkedChanged = function (isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    };\n    Checkbox.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    Checkbox.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    Checkbox.prototype.setFocus = function () {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    };\n    Checkbox.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var _b = this, inputId = _b.inputId, indeterminate = _b.indeterminate, disabled = _b.disabled, checked = _b.checked, value = _b.value, color = _b.color, el = _b.el;\n        var labelId = inputId + '-lbl';\n        var mode = getIonMode(this);\n        var label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        var path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": \"\" + checked, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['checkbox-checked'] = checked, _a['checkbox-disabled'] = disabled, _a['checkbox-indeterminate'] = indeterminate, _a['interactive'] = true, _a)) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: function (btnEl) { return _this.buttonEl = btnEl; } })));\n    };\n    Object.defineProperty(Checkbox.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox, \"watchers\", {\n        get: function () {\n            return {\n                \"checked\": [\"checkedChanged\"],\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox, \"style\", {\n        get: function () { return \":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:1;opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.23);--background:var(--ion-item-background,var(--ion-background-color,#fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:16px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:16px;margin-inline-end:16px}}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Checkbox;\n}());\nvar checkboxIds = 0;\nexport { Checkbox as ion_checkbox };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic/core/dist/esm-es5/ion-checkbox-ios.entry.js\n// module id = MYGy\n// module chunks = 65"],"sourceRoot":""}