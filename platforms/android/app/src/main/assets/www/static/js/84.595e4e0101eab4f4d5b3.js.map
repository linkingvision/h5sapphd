{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/css-shim-206ea950-3169f23e.js"],"names":["StyleNode","this","start","end","previous","parent","rules","parsedCssText","cssText","atRule","type","keyframesName","selector","parsedSelector","parse","text","parseCss","node","t","substring","trim","ss","s","replace","code","arguments","repeat","length","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","i","l","r","root","n","OPEN_BRACE","p","push","CLOSE_BRACE","lex","comments","port","customProp","mixinProp","mixinApply","varApply","findRegex","regex","offset","VAR_USAGE_START","VAR_ASSIGN_START","COMMENTS","TRAILING_LINES","compileVar","template","varMeta","varPos","endVar","count","c","findVarEndIndex","_a","propName","fallback","slice","join","undefined","parseVar","compileTemplate","params","props","prop","executeTemplate","resolveVar","final","findEndValue","onStr","double","index","assignPos","removeCustomAssigns","segments","resolveValues","selectors","forEach","declarations","dec","value","propsValues","entries","Object","_loop_1","dirty","key","propValue","getSelectors","filter","rule","xArray","FIND_DECLARATIONS","exec","normalizeValue","important","getDeclarations","specificity","nu","IMPORTANT","endsWith","substr","getSelectorsForScopes","scopes","scope","apply","parseCSS","original","ast","usesCssVars","addGlobalStyle","globalScopes","styleEl","some","css","textContent","updateGlobalScopes","replaceScope","oldScopeId","newScopeId","find","RegExp","loadDocument","doc","loadDocumentStyles","promises","linkElms","querySelectorAll","addGlobalLink","Promise","all","loadDocumentLinks","Array","from","map","style","Boolean","linkElm","url","href","fetch","then","rsp","CSS_VARIABLE_REGEXP","test","parentNode","CSS_URL_REGEXP","lastIndex","hasRelativeUrls","originalUrl","basePath","fullMatch","relativeUrl","fixRelativeUrls","createElement","setAttribute","insertBefore","remove","catch","err","console","error","CustomStyle","win","hostStyleMap","WeakMap","hostScopeMap","scopesMap","Map","didInit","prototype","initShim","_this","resolve","requestAnimationFrame","MutationObserver","observe","document","head","childList","addLink","linkEl","updateGlobal","createHostStyle","hostEl","cssScopeId","isScoped","has","Error","scopeId","baseScope","registerHostTemplate","set","segment","sel","assign","removeHost","get","delete","updateHost","scopesForElement","hostTemplateMap","parentElement","getScopesForElement","activeSelectors","el","matches","sort","a","b","getActiveSelectors","window","__stencil_cssshim","CSS","supports"],"mappings":"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","file":"static/js/84.595e4e0101eab4f4d5b3.js","sourcesContent":["/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n/** @unrestricted */\nvar StyleNode = /** @class */ (function () {\n    function StyleNode() {\n        this.start = 0;\n        this.end = 0;\n        this.previous = null;\n        this.parent = null;\n        this.rules = null;\n        this.parsedCssText = '';\n        this.cssText = '';\n        this.atRule = false;\n        this.type = 0;\n        this.keyframesName = '';\n        this.selector = '';\n        this.parsedSelector = '';\n    }\n    return StyleNode;\n}());\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n    text = clean(text);\n    return parseCss(lex(text), text);\n}\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n    var root = new StyleNode();\n    root['start'] = 0;\n    root['end'] = text.length;\n    var n = root;\n    for (var i = 0, l = text.length; i < l; i++) {\n        if (text[i] === OPEN_BRACE) {\n            if (!n['rules']) {\n                n['rules'] = [];\n            }\n            var p = n;\n            var previous = p['rules'][p['rules'].length - 1] || null;\n            n = new StyleNode();\n            n['start'] = i + 1;\n            n['parent'] = p;\n            n['previous'] = previous;\n            p['rules'].push(n);\n        }\n        else if (text[i] === CLOSE_BRACE) {\n            n['end'] = i + 1;\n            n = n['parent'] || root;\n        }\n    }\n    return root;\n}\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n    var t = text.substring(node['start'], node['end'] - 1);\n    node['parsedCssText'] = node['cssText'] = t.trim();\n    if (node.parent) {\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\n        t = text.substring(ss, node['start'] - 1);\n        t = _expandUnicodeEscapes(t);\n        t = t.replace(RX.multipleSpaces, ' ');\n        // TODO(sorvell): ad hoc; make selector include only after last ;\n        // helps with mixin syntax\n        t = t.substring(t.lastIndexOf(';') + 1);\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\n        node['atRule'] = (s.indexOf(AT_START) === 0);\n        // note, support a subset of rule types...\n        if (node['atRule']) {\n            if (s.indexOf(MEDIA_START) === 0) {\n                node['type'] = types.MEDIA_RULE;\n            }\n            else if (s.match(RX.keyframesRule)) {\n                node['type'] = types.KEYFRAMES_RULE;\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n            }\n        }\n        else {\n            if (s.indexOf(VAR_START) === 0) {\n                node['type'] = types.MIXIN_RULE;\n            }\n            else {\n                node['type'] = types.STYLE_RULE;\n            }\n        }\n    }\n    var r$ = node['rules'];\n    if (r$) {\n        for (var i = 0, l = r$.length, r = void 0; (i < l) && (r = r$[i]); i++) {\n            parseCss(r, text);\n        }\n    }\n    return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n        var code = arguments[1], repeat = 6 - code.length;\n        while (repeat--) {\n            code = '0' + code;\n        }\n        return '\\\\' + code;\n    });\n}\n/** @enum {number} */\nvar types = {\n    STYLE_RULE: 1,\n    KEYFRAMES_RULE: 7,\n    MEDIA_RULE: 4,\n    MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n// helper regexp's\nvar RX = {\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    port: /@import[^;]*;/gim,\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n    keyframesRule: /^@[^\\s]*keyframes/,\n    multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\nfunction findRegex(regex, cssText, offset) {\n    regex['lastIndex'] = 0;\n    var r = cssText.substring(offset).match(regex);\n    if (r) {\n        var start = offset + r['index'];\n        return {\n            start: start,\n            end: start + r[0].length\n        };\n    }\n    return null;\n}\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\nfunction resolveVar(props, prop, fallback) {\n    if (props[prop]) {\n        return props[prop];\n    }\n    if (fallback) {\n        return executeTemplate(fallback, props);\n    }\n    return '';\n}\nfunction findVarEndIndex(cssText, offset) {\n    var count = 0;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (c === '(') {\n            count++;\n        }\n        else if (c === ')') {\n            count--;\n            if (count <= 0) {\n                return i + 1;\n            }\n        }\n    }\n    return i;\n}\nfunction parseVar(cssText, offset) {\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n    if (!varPos) {\n        return null;\n    }\n    var endVar = findVarEndIndex(cssText, varPos.start);\n    var varContent = cssText.substring(varPos.end, endVar - 1);\n    var _a = varContent.split(','), propName = _a[0], fallback = _a.slice(1);\n    return {\n        start: varPos.start,\n        end: endVar,\n        propName: propName.trim(),\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n    };\n}\nfunction compileVar(cssText, template, offset) {\n    var varMeta = parseVar(cssText, offset);\n    if (!varMeta) {\n        template.push(cssText.substring(offset, cssText.length));\n        return cssText.length;\n    }\n    var propName = varMeta.propName;\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n    template.push(cssText.substring(offset, varMeta.start), function (params) { return resolveVar(params, propName, fallback); });\n    return varMeta.end;\n}\nfunction executeTemplate(template, props) {\n    var final = '';\n    for (var i = 0; i < template.length; i++) {\n        var s = template[i];\n        final += (typeof s === 'string')\n            ? s\n            : s(props);\n    }\n    return final;\n}\nfunction findEndValue(cssText, offset) {\n    var onStr = false;\n    var double = false;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (onStr) {\n            if (double && c === '\"') {\n                onStr = false;\n            }\n            if (!double && c === '\\'') {\n                onStr = false;\n            }\n        }\n        else {\n            if (c === '\"') {\n                onStr = true;\n                double = true;\n            }\n            else if (c === '\\'') {\n                onStr = true;\n                double = false;\n            }\n            else if (c === ';') {\n                return i + 1;\n            }\n            else if (c === '}') {\n                return i;\n            }\n        }\n    }\n    return i;\n}\nfunction removeCustomAssigns(cssText) {\n    var final = '';\n    var offset = 0;\n    while (true) {\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n        var start = assignPos ? assignPos.start : cssText.length;\n        final += cssText.substring(offset, start);\n        if (assignPos) {\n            offset = findEndValue(cssText, start);\n        }\n        else {\n            break;\n        }\n    }\n    return final;\n}\nfunction compileTemplate(cssText) {\n    var index = 0;\n    cssText = cssText.replace(COMMENTS, '');\n    cssText = removeCustomAssigns(cssText)\n        .replace(TRAILING_LINES, '');\n    var segments = [];\n    while (index < cssText.length) {\n        index = compileVar(cssText, segments, index);\n    }\n    return segments;\n}\nfunction resolveValues(selectors) {\n    var props = {};\n    selectors.forEach(function (selector) {\n        selector.declarations.forEach(function (dec) {\n            props[dec.prop] = dec.value;\n        });\n    });\n    var propsValues = {};\n    var entries = Object.entries(props);\n    var _loop_1 = function (i) {\n        var dirty = false;\n        entries.forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            var propValue = executeTemplate(value, propsValues);\n            if (propValue !== propsValues[key]) {\n                propsValues[key] = propValue;\n                dirty = true;\n            }\n        });\n        if (!dirty) {\n            return \"break\";\n        }\n    };\n    for (var i = 0; i < 10; i++) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n    return propsValues;\n}\nfunction getSelectors(root, index) {\n    if (index === void 0) {\n        index = 0;\n    }\n    if (!root.rules) {\n        return [];\n    }\n    var selectors = [];\n    root.rules\n        .filter(function (rule) { return rule.type === types.STYLE_RULE; })\n        .forEach(function (rule) {\n        var declarations = getDeclarations(rule.cssText);\n        if (declarations.length > 0) {\n            rule.parsedSelector.split(',').forEach(function (selector) {\n                selector = selector.trim();\n                selectors.push({\n                    selector: selector,\n                    declarations: declarations,\n                    specificity: computeSpecificity(),\n                    nu: index\n                });\n            });\n        }\n        index++;\n    });\n    return selectors;\n}\nfunction computeSpecificity(_selector) {\n    return 1;\n}\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\nfunction getDeclarations(cssText) {\n    var declarations = [];\n    var xArray;\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n        var _a = normalizeValue(xArray[2]), value = _a.value, important = _a.important;\n        declarations.push({\n            prop: xArray[1].trim(),\n            value: compileTemplate(value),\n            important: important,\n        });\n    }\n    return declarations;\n}\nfunction normalizeValue(value) {\n    var regex = /\\s+/gim;\n    value = value.replace(regex, ' ').trim();\n    var important = value.endsWith(IMPORTANT);\n    if (important) {\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\n    }\n    return {\n        value: value,\n        important: important\n    };\n}\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n    // computes the css scopes that might affect this particular element\n    // avoiding using spread arrays to avoid ts helper fns when in es5\n    var scopes = [];\n    var scopesForElement = getScopesForElement(hostScopeMap, hostEl);\n    // globalScopes are always took into account\n    globalScopes.forEach(function (s) { return scopes.push(s); });\n    // the parent scopes are computed by walking parent dom until <html> is reached\n    scopesForElement.forEach(function (s) { return scopes.push(s); });\n    // each scope might have an array of associated selectors\n    // let's flatten the complete array of selectors from all the scopes\n    var selectorSet = getSelectorsForScopes(scopes);\n    // we filter to only the selectors that matches the hostEl\n    var activeSelectors = selectorSet.filter(function (selector) { return matches(hostEl, selector.selector); });\n    // sort selectors by specifity\n    return sortSelectors(activeSelectors);\n}\nfunction getScopesForElement(hostTemplateMap, node) {\n    var scopes = [];\n    while (node) {\n        var scope = hostTemplateMap.get(node);\n        if (scope) {\n            scopes.push(scope);\n        }\n        node = node.parentElement;\n    }\n    return scopes;\n}\nfunction getSelectorsForScopes(scopes) {\n    var selectors = [];\n    scopes.forEach(function (scope) {\n        selectors.push.apply(selectors, scope.selectors);\n    });\n    return selectors;\n}\nfunction sortSelectors(selectors) {\n    selectors.sort(function (a, b) {\n        if (a.specificity === b.specificity) {\n            return a.nu - b.nu;\n        }\n        return a.specificity - b.specificity;\n    });\n    return selectors;\n}\nfunction matches(el, selector) {\n    return selector === ':root' || selector === 'html' || el.matches(selector);\n}\nfunction parseCSS(original) {\n    var ast = parse(original);\n    var template = compileTemplate(original);\n    var selectors = getSelectors(ast);\n    return {\n        original: original,\n        template: template,\n        selectors: selectors,\n        usesCssVars: template.length > 1\n    };\n}\nfunction addGlobalStyle(globalScopes, styleEl) {\n    if (globalScopes.some(function (css) { return css.styleEl === styleEl; })) {\n        return false;\n    }\n    var css = parseCSS(styleEl.textContent);\n    css.styleEl = styleEl;\n    globalScopes.push(css);\n    return true;\n}\nfunction updateGlobalScopes(scopes) {\n    var selectors = getSelectorsForScopes(scopes);\n    var props = resolveValues(selectors);\n    scopes.forEach(function (scope) {\n        if (scope.usesCssVars) {\n            scope.styleEl.textContent = executeTemplate(scope.template, props);\n        }\n    });\n}\nfunction reScope(scope, scopeId) {\n    var template = scope.template.map(function (segment) {\n        return (typeof segment === 'string')\n            ? replaceScope(segment, scope.scopeId, scopeId)\n            : segment;\n    });\n    var selectors = scope.selectors.map(function (sel) {\n        return Object.assign(Object.assign({}, sel), { selector: replaceScope(sel.selector, scope.scopeId, scopeId) });\n    });\n    return Object.assign(Object.assign({}, scope), { template: template,\n        selectors: selectors,\n        scopeId: scopeId });\n}\nfunction replaceScope(original, oldScopeId, newScopeId) {\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n    return original;\n}\nfunction replaceAll(input, find, replace) {\n    return input.replace(new RegExp(find, 'g'), replace);\n}\nfunction loadDocument(doc, globalScopes) {\n    loadDocumentStyles(doc, globalScopes);\n    return loadDocumentLinks(doc, globalScopes);\n}\nfunction startWatcher(doc, globalScopes) {\n    var mutation = new MutationObserver(function () {\n        if (loadDocumentStyles(doc, globalScopes)) {\n            updateGlobalScopes(globalScopes);\n        }\n    });\n    mutation.observe(document.head, { childList: true });\n}\nfunction loadDocumentLinks(doc, globalScopes) {\n    var promises = [];\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]:not([data-no-shim])');\n    for (var i = 0; i < linkElms.length; i++) {\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n    }\n    return Promise.all(promises);\n}\nfunction loadDocumentStyles(doc, globalScopes) {\n    var styleElms = Array.from(doc.querySelectorAll('style:not([data-styles]):not([data-no-shim])'));\n    return styleElms\n        .map(function (style) { return addGlobalStyle(globalScopes, style); })\n        .some(Boolean);\n}\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n    var url = linkElm.href;\n    return fetch(url).then(function (rsp) { return rsp.text(); }).then(function (text) {\n        if (hasCssVariables(text) && linkElm.parentNode) {\n            if (hasRelativeUrls(text)) {\n                text = fixRelativeUrls(text, url);\n            }\n            var styleEl = doc.createElement('style');\n            styleEl.setAttribute('data-styles', '');\n            styleEl.textContent = text;\n            addGlobalStyle(globalScopes, styleEl);\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\n            linkElm.remove();\n        }\n    }).catch(function (err) {\n        console.error(err);\n    });\n}\n// This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\nfunction hasCssVariables(css) {\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n}\n// This regexp find all url() usages with relative urls\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?!(?:https?|data)\\:|\\/)([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\nfunction hasRelativeUrls(css) {\n    CSS_URL_REGEXP.lastIndex = 0;\n    return CSS_URL_REGEXP.test(css);\n}\nfunction fixRelativeUrls(css, originalUrl) {\n    // get the basepath from the original import url\n    var basePath = originalUrl.replace(/[^/]*$/, '');\n    // replace the relative url, with the new relative url\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n        // rhe new relative path is the base path + uri\n        // TODO: normalize relative URL\n        var relativeUrl = basePath + url;\n        return fullMatch.replace(url, relativeUrl);\n    });\n}\nvar CustomStyle = /** @class */ (function () {\n    function CustomStyle(win, doc) {\n        this.win = win;\n        this.doc = doc;\n        this.count = 0;\n        this.hostStyleMap = new WeakMap();\n        this.hostScopeMap = new WeakMap();\n        this.globalScopes = [];\n        this.scopesMap = new Map();\n        this.didInit = false;\n    }\n    CustomStyle.prototype.initShim = function () {\n        var _this = this;\n        if (this.didInit) {\n            return Promise.resolve();\n        }\n        else {\n            this.didInit = true;\n            return new Promise(function (resolve) {\n                _this.win.requestAnimationFrame(function () {\n                    startWatcher(_this.doc, _this.globalScopes);\n                    loadDocument(_this.doc, _this.globalScopes).then(function () { return resolve(); });\n                });\n            });\n        }\n    };\n    CustomStyle.prototype.addLink = function (linkEl) {\n        var _this = this;\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n            _this.updateGlobal();\n        });\n    };\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n        if (addGlobalStyle(this.globalScopes, styleEl)) {\n            this.updateGlobal();\n        }\n    };\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText, isScoped) {\n        if (this.hostScopeMap.has(hostEl)) {\n            throw new Error('host style already created');\n        }\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId, isScoped);\n        var styleEl = this.doc.createElement('style');\n        styleEl.setAttribute('data-styles', '');\n        if (!baseScope.usesCssVars) {\n            // This component does not use (read) css variables\n            styleEl.textContent = cssText;\n        }\n        else if (isScoped) {\n            // This component is dynamic: uses css var and is scoped\n            styleEl['s-sc'] = cssScopeId = baseScope.scopeId + \"-\" + this.count;\n            styleEl.textContent = '/*needs update*/';\n            this.hostStyleMap.set(hostEl, styleEl);\n            this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n            this.count++;\n        }\n        else {\n            // This component uses css vars, but it's no-encapsulation (global static)\n            baseScope.styleEl = styleEl;\n            if (!baseScope.usesCssVars) {\n                styleEl.textContent = executeTemplate(baseScope.template, {});\n            }\n            this.globalScopes.push(baseScope);\n            this.updateGlobal();\n            this.hostScopeMap.set(hostEl, baseScope);\n        }\n        return styleEl;\n    };\n    CustomStyle.prototype.removeHost = function (hostEl) {\n        var css = this.hostStyleMap.get(hostEl);\n        if (css) {\n            css.remove();\n        }\n        this.hostStyleMap.delete(hostEl);\n        this.hostScopeMap.delete(hostEl);\n    };\n    CustomStyle.prototype.updateHost = function (hostEl) {\n        var scope = this.hostScopeMap.get(hostEl);\n        if (scope && scope.usesCssVars && scope.isScoped) {\n            var styleEl = this.hostStyleMap.get(hostEl);\n            if (styleEl) {\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n                var props = resolveValues(selectors);\n                styleEl.textContent = executeTemplate(scope.template, props);\n            }\n        }\n    };\n    CustomStyle.prototype.updateGlobal = function () {\n        updateGlobalScopes(this.globalScopes);\n    };\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId, isScoped) {\n        var scope = this.scopesMap.get(scopeId);\n        if (!scope) {\n            scope = parseCSS(cssText);\n            scope.scopeId = scopeId;\n            scope.isScoped = isScoped;\n            this.scopesMap.set(scopeId, scope);\n        }\n        return scope;\n    };\n    return CustomStyle;\n}());\nvar win = window;\nfunction needsShim() {\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\n}\nif (!win.__stencil_cssshim && needsShim()) {\n    win.__stencil_cssshim = new CustomStyle(win, document);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic/core/dist/esm-es5/css-shim-206ea950-3169f23e.js\n// module id = fZTg\n// module chunks = 84"],"sourceRoot":""}